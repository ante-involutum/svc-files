---
kind: Service
apiVersion: v1
metadata:
  name: "{{ .Release.Name }}-{{ .Chart.Name }}"
  labels:
    app: "{{ .Release.Name }}-{{ .Chart.Name }}"
spec:
  selector:
    app: "{{ .Release.Name }}-{{ .Chart.Name }}"
  ports:
    - protocol: TCP
      name: controller
      port: 8004
      targetPort: 8004
    - protocol: TCP
      name: files
      port: 8006
      targetPort: 8000

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-{{ .Chart.Name }}"
  labels:
    app: "{{ .Release.Name }}-{{ .Chart.Name }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "{{ .Release.Name }}-{{ .Chart.Name }}"
  template:
    metadata:
      labels:
        app: "{{ .Release.Name }}-{{ .Chart.Name }}"
    spec:
      imagePullSecrets:
        - name: regcred
      containers:
        - name: files
          image: "{{ .Values.registry }}/{{ .Values.repository }}/{{ .Values.image }}"
          securityContext:
            runAsUser: 0
            privileged: false
          command:
            - "python"
          args:
            - "-m"
            - "http.server"
          ports:
            - containerPort: 8000
          imagePullPolicy: Always
          volumeMounts:
            - mountPath: /files/share
              name: share-volume
        - name: controller
          image: "{{ .Values.registry }}/{{ .Values.repository }}/{{ .Values.image }}"
          securityContext:
            runAsUser: 0
            privileged: false
          command:
            - "uvicorn"
          args:
            - "src.main:app"
            - "--reload"
            - "--host=0.0.0.0"
            - "--port=8004"
            - "--debug"
            - "--log-config=uvicorn_config.json"
          ports:
            - containerPort: 8004
          imagePullPolicy: Always
          volumeMounts:
            - mountPath: /files/share
              name: share-volume
          env:
            - name: MINIO_ACCESS_KEY
              valueFrom:
                configMapKeyRef:
                  name: atop-globe-config
                  key: minio_access_key
            - name: MINIO_HOST
              valueFrom:
                configMapKeyRef:
                  name: atop-globe-config
                  key: minio_host
            - name: MINIO_SECRET_KEY
              valueFrom:
                configMapKeyRef:
                  name: atop-globe-config
                  key: minio_secret_key
            - name: PORT
              valueFrom:
                configMapKeyRef:
                  name: atop-globe-config
                  key: port
            - name: HOST
              valueFrom:
                configMapKeyRef:
                  name: atop-globe-config
                  key: host
            - name: ENV
              valueFrom:
                configMapKeyRef:
                  name: atop-globe-config
                  key: env
      volumes:
        - name: share-volume
          # emptyDir: {}
          hostPath:
            path: /atop/share