---
kind: Service
apiVersion: v1
metadata:
  name: "{{ .Release.Name }}"
  labels:
    app: "{{ .Release.Name }}"
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/path: "/v1.0/metrics"
    prometheus.io/port: "8004"
spec:
  selector:
    app: "{{ .Release.Name }}"
  ports:
    - protocol: TCP
      name: files
      port: 8004
      targetPort: 8004

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}"
  labels:
    app: "{{ .Release.Name }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "{{ .Release.Name }}"
  template:
    metadata:
      labels:
        app: "{{ .Release.Name }}"
    spec:
      # imagePullSecrets:
      #   - name: regcred
      containers:
        - name: files
          image: "{{ .Values.registry }}/{{ .Values.repository }}/{{ .Values.image }}:{{ .Chart.AppVersion }}"
          # securityContext:
          # runAsUser: 0
          # privileged: false
          command:
            - "uvicorn"
          args:
            - "src.main:app"
            - "--reload"
            - "--host=0.0.0.0"
            - "--port=8004"
            - "--debug"
            - "--log-config=uvicorn_config.json"
          ports:
            - containerPort: 8004
          imagePullPolicy: Always
          env:
            - name: MINIO_ACCESS_KEY
              valueFrom:
                configMapKeyRef:
                  name: files-config
                  key: MINIO_ACCESS_KEY
            - name: MINIO_SECRET_KEY
              valueFrom:
                configMapKeyRef:
                  name: files-config
                  key: MINIO_SECRET_KEY
            - name: MINIO_HOST
              valueFrom:
                configMapKeyRef:
                  name: files-config
                  key: MINIO_HOST
            - name: HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: RELEASE
              value: "{{ .Release.Name }}"
            - name: PORT
              value: "31690"
