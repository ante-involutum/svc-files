apiVersion: v1
kind: Service
metadata:
  name: "{{ .Release.Name }}-{{ .Chart.Name }}-nginx"
  labels:
    app: "{{ .Release.Name }}-{{ .Chart.Name }}-nginx"
spec:
  type: NodePort
  selector:
    app: "{{ .Release.Name }}-{{ .Chart.Name }}-nginx"
  ports:
    - port: 8080
      targetPort: 80
      nodePort: {{ .Values.nginx.nodePort }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-{{ .Chart.Name }}-nginx"
  labels:
    app: "{{ .Release.Name }}-{{ .Chart.Name }}-nginx"  
spec:
  selector:
    matchLabels:
      app: "{{ .Release.Name }}-{{ .Chart.Name }}-nginx"
  replicas: 1
  template:
    metadata:
      labels:
        app: "{{ .Release.Name }}-{{ .Chart.Name }}-nginx"
    spec:
      containers:
        - name: nginx
          image: nginx
          imagePullPolicy: Always
          ports:
            - containerPort: 80
          volumeMounts:
            - name: data
              mountPath: /data
            - name: config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: "{{ .Release.Name }}-minio"
        - name: config
          configMap:
            name: files-nginx-conf

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: files-nginx-conf
data:
  nginx.conf: |
    user nginx;
    worker_processes 1;
    error_log /var/log/nginx/error.log warn;
    pid /var/run/nginx.pid;
    events {
      worker_connections 1024;
    }
    http {
      include /etc/nginx/mime.types;
      default_type application/octet-stream;
      log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
      access_log /var/log/nginx/access.log main;
      sendfile on;
      keepalive_timeout 65;
      server {
        listen 80;
        server_name localhost;
        location / {
          add_header Access-Control-Allow-Origin *;
          add_header Access-Control-Allow-Methods *;
          root /data;
          autoindex on;
          index index.html;
          try_files $uri $uri/ /index.html;
        }
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
          root /error;
        }
      }
    }
